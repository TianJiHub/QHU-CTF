version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:14-alpine
    container_name: ctf_postgres
    environment:
      POSTGRES_DB: ctf_platform
      POSTGRES_USER: ctf_user
      POSTGRES_PASSWORD: ctf_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ctf_network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: ctf_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ctf_network

  # 后端 Flask 应用
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ctf_backend
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://ctf_user:ctf_password@postgres:5432/ctf_platform
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - ctf_network
    command: flask run --host=0.0.0.0 --port=5000

  # 前端 Vue 应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ctf_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - ctf_network
    command: npm run dev

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: ctf_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./config/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - ctf_network

volumes:
  postgres_data:
  redis_data:

networks:
  ctf_network:
    driver: bridge